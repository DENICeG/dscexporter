prometheus:

  metrics: 
    # pcap_stats: {} # Nicht im dsp
    # servfail_qname
    qr_aa_bits: {} #  For Query Attributes -> QR and AA Plot
    priming_responses: # Für Priming Responses plot
      aggregations: 
        ReplyLen:
          type: Bucket
          params: 
            start: 0 # TODO: -1 Starten??
            width: 50
            count: 26
    priming_queries: # Für Priming Queries plot
      aggregations: 
        EDNSBufSiz:
          type: EliminateDimension
    dns_ip_version_vs_qtype: {} # Für IP Version plot
    direction_vs_ipproto: {} # Für IP protocol plot
    # third_ld_vs_rcode
    # second_ld_vs_rcode
    client_port_range: # Für Source Ports plot
      aggregations: 
        PortRange:
          type: Bucket
          params: 
            start: -1
            width: 1024
            count: 64 # TODO: Überprüfen, zu viel??
            none_counter: true
            use_midpoint: true 
    transport_vs_qtype: {}  # Für DNS Transport plot
    # ipv6_rsn_abusers 
    # idn_vs_tld: {} # Nicht im dsp
    rd_bit: {} # For Query Attributes -> RD bit plot
    do_bit: {} # For Query Attributes -> DO bit plot
    edns_bufsiz:  #  For Query Attributes -> EDNS Bufsiz
      aggregations: 
        EDNSBufSiz:
          type: Bucket
          params: 
            start: -1
            width: 512
            count: 9 # TODO: Überprüfen
            none_counter: true
            use_midpoint: true
    edns_version: {} #  For Query Attributes -> EDNS Version
    idn_qname: {} # For Query Attributes -> idn Qnames plot
    chaos_types_and_names: {} # Für CHAOS plot TODO: Security? Was wenn man andere qnames abfragt?
    # client_addr_vs_rcode: 
    # client_subnet2:
    certain_qnames_vs_qtype: {} # Schon wieder qtype
    # qtype_vs_tld: {} # Nicht im dsp
    qtype_vs_qnamelen: # Für Qname Length plot
      aggregations: 
        QnameLen:
          type: Bucket
          params: 
            start: 0 # TODO: -1 Starten??
            width: 5
            count: 12
    # client_subnet: 
    rcode_vs_replylen: # Für Reply Lengths plot
      aggregations: 
        ReplyLen:
          type: Bucket
          params: 
            start: 0 # TODO: -1 Starten??
            width: 50
            count: 26
    opcode: {} # For opcodes plot
    rcode: {} # For rcodee plot
    qtype: {} # For qtypes plot

interval: 60s
