on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '!*-rc[0-9]+'
    branches:
      - main

name: Test & Release

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Test
      run: make test

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: go-test-converage
        path: cover.out
      
  build: 
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: make build-linux

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: dscexporter
          path: ./build/linux/dscexporter

  upload-release-asset:
    needs: build
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: dscexporter
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dscexporter
          asset_name: dscexporter
          asset_content_type: application/octet-stream