name: Test & Release

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Test
      run: make test

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: go-test-converage
        path: cover.out
      
  build: 
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: make build-linux

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: dscexporter
          path: ./build/linux/dscexporter

  
  get-branches-containing-tag:
    name: Get branches containing tag
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v')}}
    outputs:
      branch: ${{ steps.check_step.outputs.branches }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history

      - name: Get current branch
        id: check_step
        # 1. Get the list of branches ref where this tag exists
        # 2. Remove 'origin/' from that result
        # 3. Put that string in output
        # => We can now use function 'contains(list, item)''
        run: |
          echo $(git branch -r)
          raw=$(git branch -r --contains refs/tags/v0.0.11)
          echo $raw 
          branches="$(echo ${raw//origin\//} | tr -d '\n')"
          echo $branches
          echo "branches=$branches" >> $GITHUB_OUTPUT
          echo "Branches where this tag exists : $branches."

  upload-release-asset:
    needs: 
      - build
      - get-branches-containing-tag
    name: Upload Release Asset
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') && contains(needs.get-branches-containing-tag.outputs.branch, 'main')}}
    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: dscexporter
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dscexporter
            